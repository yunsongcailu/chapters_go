package pkg_fmt

const (
	Verbs = `通用：
%v    值的默认格式表示
%+v   类似%v，但输出结构体时会添加字段名
%#v   值的Go语法表示
%T    值的类型的Go语法表示
%%    百分号
布尔值：
%t    单词true或false
整数：
%b    表示为二进制
%c    该值对应的unicode码值
%d    表示为十进制
%o    表示为八进制
%q    该值对应的单引号括起来的go语法字符字面值，必要时会采用安全的转义表示
%x    表示为十六进制，使用a-f
%X    表示为十六进制，使用A-F
%U    表示为Unicode格式：U+1234，等价于"U+%04X"
浮点数与复数的两个组分：
%b    无小数部分、二进制指数的科学计数法，如-123456p-78；参见strconv.FormatFloat
%e    科学计数法，如-1234.456e+78
%E    科学计数法，如-1234.456E+78
%f    有小数部分但无指数部分，如123.456
%F    等价于%f
%g    根据实际情况采用%e或%f格式（以获得更简洁、准确的输出）
%G    根据实际情况采用%E或%F格式（以获得更简洁、准确的输出）
字符串和[]byte：
%s    直接输出字符串或者[]byte
%q    该值对应的双引号括起来的go语法字符串字面值，必要时会采用安全的转义表示
%x    每个字节用两字符十六进制数表示（使用a-f）
%X    每个字节用两字符十六进制数表示（使用A-F）  
指针：
%p    表示为十六进制，并加上前导的0x
精度:
%f:    默认宽度，默认精度
%9f    宽度9，默认精度
%.2f   默认宽度，精度2
%9.2f  宽度9，精度2
%9.f   宽度9，精度0
其它flag：
'+'   总是输出数值的正负号；对%q（%+q）会生成全部是ASCII字符的输出（通过转义）；
' '   对数值，正数前加空格而负数前加负号；
'-'   在输出右边填充空白而不是默认的左边（即从默认的右对齐切换为左对齐）；
'#'   切换格式：
      八进制数前加0（%#o），十六进制数前加0x（%#x）或0X（%#X），指针去掉前面的0x（%#p）；
  对%q（%#q），如果strconv.CanBackquote返回真会输出反引号括起来的未转义字符串；
  对%U（%#U），输出Unicode格式后，如字符可打印，还会输出空格和单引号括起来的go字面值；
      对字符串采用%x或%X时（% x或% X）会给各打印的字节之间加空格；
'0'   使用0而不是空格填充，对于数值类型会把填充的0放在正负号后面；
`
)
